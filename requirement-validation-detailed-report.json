{
  "timestamp": "2025-10-27T09:22:07.146Z",
  "summary": {
    "totalRequirements": 168,
    "totalTestCases": 171,
    "coverageStats": {
      "total": 168,
      "full": 0,
      "partial": 0,
      "minimal": 33,
      "none": 135,
      "overallCoverage": 3.9285714285714293
    },
    "typeStats": {
      "auth": {
        "total": 18,
        "covered": 6
      },
      "functional": {
        "total": 11,
        "covered": 0
      },
      "validation": {
        "total": 11,
        "covered": 7
      },
      "api": {
        "total": 128,
        "covered": 20
      }
    }
  },
  "requirements": [
    {
      "id": "REQ-1",
      "source": "requirement_new.md",
      "section": "",
      "description": ".  用户登录",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-2",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1 登录界面",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-3",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1.1 界面布局从上到下包含：",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-4",
      "source": "requirement_new.md",
      "section": "",
      "description": "手机号输入区域：左侧默认显示\"+86\"，右侧为手机号输入框（占位符文本：\"请输入手机号\"）",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-5",
      "source": "requirement_new.md",
      "section": "",
      "description": "验证码输入区域：左侧为验证码输入框（占位符文本：\"请输入验证码\"），右侧为\"获取验证码\"按钮",
      "details": [],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-6",
      "source": "requirement_new.md",
      "section": "",
      "description": "\"登录\"按钮：全宽度，橙色",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-7",
      "source": "requirement_new.md",
      "section": "",
      "description": "底部导航区域：包含\"忘记账号\"和\"免费注册\"链接，点击\"免费注册\"链接跳转到注册页面",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-8",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2 用户发起获取验证码请求",
      "details": [],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-9",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2.1 校验用户输入的手机号码格式是否正确",
      "details": [
        "Scenario: 请求验证码时手机号格式无效",
        "Given 用户在**登录页面**",
        "And 用户输入一个无效的手机号（如 \"123\"）",
        "When 用户点击”获取验证码”",
        "Then 系统不发送验证码",
        "And 页面提示“请输入正确的手机号码”"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-10",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2.2 生成验证码",
      "details": [
        "Scenario: 成功获取验证码",
        "Given 用户在**登录页面**",
        "And 用户输入一个格式正确的手机号",
        "When 用户点击“获取验证码”",
        "Then 系统为该手机号生成一个6位验证码并打印在控制台",
        "And “获取验证码”按钮进入60秒倒计时且不可点击",
        "And 数据库记录手机号和验证码，有效期为60秒"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-11",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3 用户提交登录信息",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-12",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.1 校验手机号是否已注册",
      "details": [
        "Scenario: 使用未注册的手机号登录",
        "Given 用户在**登录页面**",
        "And 用户输入了一个未注册的手机号",
        "And 用户输入了正确的验证码",
        "When 用户点击“**登录**”",
        "Then 页面提示“该手机号未注册，请先完成注册”"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-13",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.2 校验验证码是否正确",
      "details": [
        "Scenario: 使用错误的验证码登录",
        "Given 用户在**登录页面**",
        "And 用户输入了已注册的手机号",
        "And 用户输入了错误的验证码",
        "When 用户点击“**登录**”",
        "Then 页面提示“验证码错误”"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-14",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.3 系统完成登录流程",
      "details": [
        "Scenario: 成功登录",
        "Given 用户在**登录页面**",
        "And 用户输入了已注册的手机号",
        "And 用户输入了正确的验证码",
        "When 用户点击“**登录**”",
        "Then 系统验证成功",
        "And 页面提示\"登录成功\"",
        "And 页面自动跳转到首页"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-15",
      "source": "requirement_new.md",
      "section": "",
      "description": ".4 页面导航功能",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-16",
      "source": "requirement_new.md",
      "section": "",
      "description": ".4.1 登录页面到注册页面的跳转",
      "details": [
        "Scenario: 从登录页面跳转到注册页面",
        "Given 用户在**登录页面**",
        "When 用户点击\"免费注册\"链接",
        "Then 页面跳转到注册页面",
        "And 注册页面的输入框保持空白状态"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-17",
      "source": "requirement_new.md",
      "section": "",
      "description": ".  用户注册",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-18",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1 注册界面",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-19",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1.1 界面布局从上到下包含：",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-20",
      "source": "requirement_new.md",
      "section": "",
      "description": "手机号码输入区域：左侧默认显示\"中国大陆 +86\"，右侧为手机号输入框（占位符文本：\"请输入你的手机号码\"）",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-21",
      "source": "requirement_new.md",
      "section": "",
      "description": "验证码输入区域：左侧为验证码输入框（占位符文本：\"请输入校验码\"），右侧为\"获取验证码\"按钮",
      "details": [],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-22",
      "source": "requirement_new.md",
      "section": "",
      "description": "\"同意并注册\"按钮：全宽度，橙色",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-23",
      "source": "requirement_new.md",
      "section": "",
      "description": "-“已有账号？立即登录”链接：“立即登录”为橙色链接",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-24",
      "source": "requirement_new.md",
      "section": "",
      "description": "协议同意区域：包含勾选框和协议链接文本\"同意《淘贝用户协议》\"",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-25",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2 用户发起获取验证码请求",
      "details": [],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-26",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2.1 校验用户输入的手机号码格式是否正确",
      "details": [
        "Scenario: 请求验证码时手机号格式无效",
        "Given 用户在**注册页面**",
        "And 用户输入一个无效的手机号（如 \"123\"）",
        "When 用户点击“获取验证码”",
        "Then 系统不发送验证码",
        "And 页面提示“请输入正确的手机号码”"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-27",
      "source": "requirement_new.md",
      "section": "",
      "description": ".2.2 生成验证码",
      "details": [
        "Scenario: 成功获取验证码",
        "Given 用户在**注册页面**",
        "And 用户了输入一个格式正确的手机号",
        "When 用户点击“获取验证码”",
        "Then 系统为该手机号生成一个6位验证码并打印在控制台",
        "And “获取验证码”按钮进入60秒倒计时且不可点击",
        "And 数据库记录手机号和验证码，有效期为60秒"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-28",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3 用户提交注册信息",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-29",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.1 校验手机号是否已被注册",
      "details": [
        "Scenario: 使用已注册的手机号进行注册",
        "Given 用户在**注册页面**",
        "And 用户输入了已注册的手机号",
        "And 用户输入了正确的验证码",
        "When 用户点击“**同意并注册**”",
        "Then 系统不创建新用户，用户成功登录",
        "And 页面提示“该手机号已注册，将直接为您登录”",
        "And 页面跳转到首页"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-30",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.2 校验用户是否同意用户协议",
      "details": [
        "Scenario: 未同意用户协议时注册按钮的状态",
        "Given 用户在**注册页面**",
        "And 用户未勾选“同意《淘贝用户协议》”复选框",
        "Then “**同意并注册**”按钮为不可点击状态",
        "Scenario: 同意用户协议时注册按钮的状态",
        "Given 用户在**注册页面**",
        "When 用户勾选“同意《淘贝用户协议》”复选框",
        "Then “**同意并注册**”按钮变为可点击状态"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-31",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.3 校验验证码是否正确",
      "details": [
        "Scenario: 使用错误的验证码登录",
        "Given 用户在**注册页面**",
        "And 用户输入了手机号",
        "And 用户输入了错误的验证码",
        "When 用户点击“**同意并注册**”",
        "Then 页面提示“验证码错误”"
      ],
      "acceptanceCriteria": [],
      "type": "validation"
    },
    {
      "id": "REQ-32",
      "source": "requirement_new.md",
      "section": "",
      "description": ".3.3 系统完成注册流程",
      "details": [
        "Scenario: 成功注册",
        "Given 用户在**注册页面**",
        "And 用户输入了未注册的手机号",
        "And 用户输入了正确的验证码",
        "When 用户点击了“**同意并注册**”",
        "Then 系统在数据库中创建新用户，用户成功登录",
        "And 页面提示“注册成功”",
        "And 用户成功登录",
        "And 自动跳转到首页"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-33",
      "source": "requirement_new.md",
      "section": "",
      "description": ".4 页面导航功能",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-34",
      "source": "requirement_new.md",
      "section": "",
      "description": ".4.1 注册页面返回登录页面",
      "details": [
        "Scenario: 从注册页面返回登录页面",
        "Given 用户在**注册页面**",
        "When 用户点击“立即登录”链接",
        "Then 页面跳转回登录页面",
        "And 登录页面的输入框保持空白状态"
      ],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-35",
      "source": "requirement_new.md",
      "section": "",
      "description": ". 首页",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-36",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1 首页布局",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-37",
      "source": "requirement_new.md",
      "section": "",
      "description": ".1.1 首页需要包含以下元素：",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-38",
      "source": "requirement_new.md",
      "section": "",
      "description": "品牌logo：橙色”淘贝”文字",
      "details": [],
      "acceptanceCriteria": [],
      "type": "functional"
    },
    {
      "id": "REQ-39",
      "source": "requirement_new.md",
      "section": "",
      "description": "登录链接：“亲，请登录”文字，点击后跳转登录页面",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "REQ-40",
      "source": "requirement_new.md",
      "section": "",
      "description": "注册链接：“免费注册”文字，点击后跳转注册页面",
      "details": [],
      "acceptanceCriteria": [],
      "type": "auth"
    },
    {
      "id": "API-41",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "UI-LoginPage"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-42",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "用户登录页面，包含手机号输入、验证码获取和登录功能。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-43",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "properties 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-44",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-45",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"登录成功后的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-46",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-47",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"导航到注册页面的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-48",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "state 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-49",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-50",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-51",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-52",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-53",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "UI-RegisterPage"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-54",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "用户注册页面，包含手机号输入、验证码获取、协议同意和注册功能。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-55",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "properties 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-56",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-57",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"注册成功后的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-58",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-59",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"导航到登录页面的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-60",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "state 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-61",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-62",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-63",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-64",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-65",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "UI-HomePage"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-66",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "应用首页，包含品牌logo和导航链接。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-67",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "properties 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-68",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-69",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"导航到登录页面的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-70",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "function"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-71",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"导航到注册页面的回调函数。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-72",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "boolean"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-73",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"用户是否已登录的状态。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-74",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "state 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-75",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-76",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-77",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-78",
      "source": ".artifacts/ui_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-79",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "API-POST-GetVerificationCode"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-80",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "route 接口实现",
      "details": [
        "POST /api/auth/verification-code"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-81",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "为指定手机号生成并发送验证码。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-82",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "input 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-83",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "JSON"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-84",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-85",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "phoneNumber 接口实现",
      "details": [
        "string"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-86",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "output 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-87",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "success 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-88",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "statusCode 接口实现",
      "details": [
        "200"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-89",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ message"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-90",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "error 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-91",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-92",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-93",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-94",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-95",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-96",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-97",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "API-POST-Login"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-98",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "route 接口实现",
      "details": [
        "POST /api/auth/login"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-99",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "处理用户登录请求，使用手机号和验证码进行身份验证。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-100",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "input 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-101",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "JSON"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-102",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-103",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "phoneNumber 接口实现",
      "details": [
        "string"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-104",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "verificationCode 接口实现",
      "details": [
        "string"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-105",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "output 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-106",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "success 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-107",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "statusCode 接口实现",
      "details": [
        "200"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-108",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ userId"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-109",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "error 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-110",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-111",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-112",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-113",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-114",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-115",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-116",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-117",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "API-POST-Register"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-118",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "route 接口实现",
      "details": [
        "POST /api/auth/register"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-119",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "处理用户注册请求，包含验证码校验和用户创建。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-120",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "input 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-121",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "type 接口实现",
      "details": [
        "JSON"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-122",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-123",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "phoneNumber 接口实现",
      "details": [
        "string"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-124",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "verificationCode 接口实现",
      "details": [
        "string"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-125",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "agreeToTerms 接口实现",
      "details": [
        "boolean"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-126",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "output 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-127",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "success 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-128",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "statusCode 接口实现",
      "details": [
        "201"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-129",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ userId"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-130",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "error 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-131",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-132",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-133",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ error"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-134",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "body 接口实现",
      "details": [
        "{ userId"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-135",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-136",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-137",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-138",
      "source": ".artifacts/api_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-139",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "DB-FindUserByPhone"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-140",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "根据手机号查找用户记录。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-141",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-142",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-143",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-144",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-145",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "DB-CreateUser"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-146",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "在数据库中创建一个新的用户记录。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-147",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-148",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-149",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-150",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-151",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "DB-CreateVerificationCode"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-152",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "在数据库中创建验证码记录。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-153",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-154",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-155",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-156",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-157",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "DB-VerifyCode"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-158",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "验证手机号对应的验证码是否正确且未过期。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-159",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-160",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-161",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-162",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-163",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "id 接口实现",
      "details": [
        "DB-CleanExpiredCodes"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-164",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "清理数据库中已过期的验证码记录。"
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-165",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "dependencies 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-166",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "acceptanceCriteria 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [
        "acceptanceCriteria:"
      ],
      "type": "api"
    },
    {
      "id": "API-167",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "changeLog 接口实现",
      "details": [
        ""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    },
    {
      "id": "API-168",
      "source": ".artifacts/data_interface.yml",
      "section": "API接口",
      "description": "description 接口实现",
      "details": [
        "\"初始创建。\""
      ],
      "acceptanceCriteria": [],
      "type": "api"
    }
  ],
  "testCases": [
    {
      "id": "TEST-1",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染淘贝品牌logo",
      "type": "ui",
      "keywords": [],
      "lineNumber": 34,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')"
      ]
    },
    {
      "id": "TEST-2",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染用户区域",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 43,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-3",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染欢迎消息",
      "type": "ui",
      "keywords": [],
      "lineNumber": 51,
      "assertions": [
        "expect(homeContent).toBeInTheDocument()",
        "expect(homeContent).toHaveTextContent('欢迎来到淘贝')"
      ]
    },
    {
      "id": "TEST-4",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "未登录状态测试",
      "name": "应该显示登录链接",
      "type": "ui",
      "keywords": [
        "登录",
        "链接"
      ],
      "lineNumber": 62,
      "assertions": [
        "expect(loginLink).toBeInTheDocument()",
        "expect(loginLink).toHaveTextContent('登录')",
        "expect(loginLink).toHaveAttribute('href', '/login')"
      ]
    },
    {
      "id": "TEST-5",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "未登录状态测试",
      "name": "应该显示注册链接",
      "type": "ui",
      "keywords": [
        "注册",
        "链接"
      ],
      "lineNumber": 72,
      "assertions": [
        "expect(registerLink).toBeInTheDocument()",
        "expect(registerLink).toHaveTextContent('注册')",
        "expect(registerLink).toHaveAttribute('href', '/register')"
      ]
    },
    {
      "id": "TEST-6",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "未登录状态测试",
      "name": "应该不显示用户信息",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 82,
      "assertions": [
        "expect(userInfo).not.toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-7",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "未登录状态测试",
      "name": "应该不显示退出登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮"
      ],
      "lineNumber": 90,
      "assertions": [
        "expect(logoutBtn).not.toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-8",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "已登录状态测试",
      "name": "应该显示用户信息",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 100,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-9",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "已登录状态测试",
      "name": "应该显示退出登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮"
      ],
      "lineNumber": 110,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-10",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "已登录状态测试",
      "name": "应该不显示登录注册链接",
      "type": "ui",
      "keywords": [
        "登录",
        "注册",
        "链接"
      ],
      "lineNumber": 120,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-11",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "已登录状态测试",
      "name": "应该显示用户手机号",
      "type": "ui",
      "keywords": [
        "手机号",
        "用户"
      ],
      "lineNumber": 130,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-12",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "导航功能测试",
      "name": "应该能够导航到登录页面",
      "type": "ui",
      "keywords": [
        "登录",
        "页面"
      ],
      "lineNumber": 142,
      "assertions": [
        "expect(loginLink).toHaveAttribute('href', '/login')"
      ]
    },
    {
      "id": "TEST-13",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "导航功能测试",
      "name": "应该能够导航到注册页面",
      "type": "ui",
      "keywords": [
        "注册",
        "页面"
      ],
      "lineNumber": 155,
      "assertions": [
        "expect(registerLink).toHaveAttribute('href', '/register')"
      ]
    },
    {
      "id": "TEST-14",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "退出登录功能测试",
      "name": "应该能够执行退出登录操作",
      "type": "ui",
      "keywords": [
        "登录"
      ],
      "lineNumber": 170,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-15",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "退出登录功能测试",
      "name": "应该在退出登录后清除用户状态",
      "type": "ui",
      "keywords": [
        "登录",
        "用户"
      ],
      "lineNumber": 180,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-16",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "退出登录功能测试",
      "name": "应该在退出登录后刷新页面",
      "type": "ui",
      "keywords": [
        "登录",
        "页面"
      ],
      "lineNumber": 190,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-17",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "响应式设计测试",
      "name": "应该在不同屏幕尺寸下正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 202,
      "assertions": [
        "expect(homePage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-18",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "响应式设计测试",
      "name": "应该在移动设备上正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 212,
      "assertions": [
        "expect(homePage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-19",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "美观布局测试",
      "name": "应该具有美观的整体布局",
      "type": "ui",
      "keywords": [],
      "lineNumber": 224,
      "assertions": [
        "expect(homePage).toBeInTheDocument()",
        "expect(brandLogo).toBeInTheDocument()",
        "expect(userSection).toBeInTheDocument()",
        "expect(homeContent).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-20",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "美观布局测试",
      "name": "应该具有合适的颜色方案",
      "type": "ui",
      "keywords": [],
      "lineNumber": 241,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-21",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "美观布局测试",
      "name": "应该具有清晰的视觉层次",
      "type": "ui",
      "keywords": [],
      "lineNumber": 251,
      "assertions": [
        "expect(homePage).toBeInTheDocument()",
        "expect(brandLogo).toBeInTheDocument()",
        "expect(userSection).toBeInTheDocument()",
        "expect(homeContent).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-22",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "用户状态管理测试",
      "name": "应该正确检查用户登录状态",
      "type": "ui",
      "keywords": [
        "登录",
        "用户"
      ],
      "lineNumber": 270,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-23",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "用户状态管理测试",
      "name": "应该在状态变化时更新UI",
      "type": "ui",
      "keywords": [],
      "lineNumber": 280,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-24",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "性能和加载测试",
      "name": "应该快速加载页面内容",
      "type": "ui",
      "keywords": [
        "页面"
      ],
      "lineNumber": 292,
      "assertions": [
        "expect(homePage).toBeInTheDocument()",
        "expect(brandLogo).toBeInTheDocument()",
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-25",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "性能和加载测试",
      "name": "应该正确处理加载状态",
      "type": "ui",
      "keywords": [],
      "lineNumber": 307,
      "assertions": [
        "expect(homePage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-26",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该正确处理用户状态获取错误",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 319,
      "assertions": [
        "expect(userSection).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-27",
      "file": "frontend/test/components/HomePage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该在网络错误时显示友好提示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 329,
      "assertions": [
        "expect(homePage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-1",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染所有必需的UI元素",
      "type": "ui",
      "keywords": [],
      "lineNumber": 34,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')"
      ]
    },
    {
      "id": "TEST-2",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染手机号输入框",
      "type": "ui",
      "keywords": [
        "手机号",
        "输入框"
      ],
      "lineNumber": 43,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()",
        "expect(phoneInput).toHaveAttribute('type', 'tel')",
        "expect(phoneInput).toHaveAttribute('placeholder', '请输入手机号')",
        "expect(phoneInput).toHaveAttribute('maxLength', '11')"
      ]
    },
    {
      "id": "TEST-3",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染验证码输入框",
      "type": "ui",
      "keywords": [
        "验证码",
        "输入框"
      ],
      "lineNumber": 54,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()",
        "expect(verificationInput).toHaveAttribute('type', 'text')",
        "expect(verificationInput).toHaveAttribute('placeholder', '请输入验证码')",
        "expect(verificationInput).toHaveAttribute('maxLength', '6')"
      ]
    },
    {
      "id": "TEST-4",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染获取验证码按钮",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 65,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()",
        "expect(getCodeBtn).toHaveTextContent('获取验证码')",
        "expect(getCodeBtn).toHaveAttribute('type', 'button')"
      ]
    },
    {
      "id": "TEST-5",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮"
      ],
      "lineNumber": 75,
      "assertions": [
        "expect(loginBtn).toBeInTheDocument()",
        "expect(loginBtn).toHaveTextContent('登录')",
        "expect(loginBtn).toHaveAttribute('type', 'submit')"
      ]
    },
    {
      "id": "TEST-6",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染注册链接",
      "type": "ui",
      "keywords": [
        "注册",
        "链接"
      ],
      "lineNumber": 85,
      "assertions": [
        "expect(registerLink).toBeInTheDocument()",
        "expect(registerLink).toHaveTextContent('立即注册')",
        "expect(registerLink).toHaveAttribute('href', '/register')"
      ]
    },
    {
      "id": "TEST-7",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "应该接受有效的手机号格式",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 97,
      "assertions": [
        "expect(phoneInput).toHaveValue(phone)"
      ]
    },
    {
      "id": "TEST-8",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "应该限制手机号输入长度",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 110,
      "assertions": [
        "expect(phoneInput).toHaveAttribute('maxLength', '11')"
      ]
    },
    {
      "id": "TEST-9",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "获取验证码按钮应该根据手机号有效性启用/禁用",
      "type": "ui",
      "keywords": [
        "验证码",
        "手机号",
        "按钮"
      ],
      "lineNumber": 119,
      "assertions": [
        "expect(getCodeBtn).toBeDisabled()",
        "expect(getCodeBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-10",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "验证码输入验证测试",
      "name": "应该只接受数字输入",
      "type": "ui",
      "keywords": [],
      "lineNumber": 136,
      "assertions": [
        "expect(verificationInput).toHaveValue('123')"
      ]
    },
    {
      "id": "TEST-11",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "验证码输入验证测试",
      "name": "应该限制验证码输入长度为6位",
      "type": "ui",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 148,
      "assertions": [
        "expect(verificationInput).toHaveAttribute('maxLength', '6')"
      ]
    },
    {
      "id": "TEST-12",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "获取验证码功能测试",
      "name": "应该在有效手机号时允许获取验证码",
      "type": "ui",
      "keywords": [
        "验证码",
        "手机号"
      ],
      "lineNumber": 159,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-13",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "获取验证码功能测试",
      "name": "应该在倒计时期间禁用获取验证码按钮",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 176,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-14",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "登录按钮状态测试",
      "name": "应该在表单无效时禁用登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮",
        "表单"
      ],
      "lineNumber": 192,
      "assertions": [
        "expect(loginBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-15",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "登录按钮状态测试",
      "name": "应该在手机号和验证码都有效时启用登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "验证码",
        "手机号",
        "按钮"
      ],
      "lineNumber": 202,
      "assertions": [
        "expect(loginBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-16",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "登录按钮状态测试",
      "name": "应该在部分信息无效时禁用登录按钮",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮"
      ],
      "lineNumber": 217,
      "assertions": [
        "expect(loginBtn).toBeDisabled()",
        "expect(loginBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-17",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "表单提交测试",
      "name": "应该在有效输入时提交登录表单",
      "type": "ui",
      "keywords": [
        "登录",
        "表单"
      ],
      "lineNumber": 236,
      "assertions": [
        "expect(loginForm).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-18",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "表单提交测试",
      "name": "应该阻止无效表单提交",
      "type": "ui",
      "keywords": [
        "表单"
      ],
      "lineNumber": 255,
      "assertions": [
        "expect(loginBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-19",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该显示手机号格式错误提示",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 270,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-20",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该显示验证码格式错误提示",
      "type": "ui",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 284,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-21",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "加载状态测试",
      "name": "应该在登录过程中显示加载状态",
      "type": "ui",
      "keywords": [
        "登录"
      ],
      "lineNumber": 299,
      "assertions": [
        "expect(loginBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-22",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "导航功能测试",
      "name": "应该能够导航到注册页面",
      "type": "ui",
      "keywords": [
        "注册",
        "页面"
      ],
      "lineNumber": 319,
      "assertions": [
        "expect(registerLink).toHaveAttribute('href', '/register')"
      ]
    },
    {
      "id": "TEST-23",
      "file": "frontend/test/components/LoginPage.test.tsx",
      "describe": "响应式设计测试",
      "name": "应该在不同屏幕尺寸下正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 334,
      "assertions": [
        "expect(loginPage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-1",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染所有必需的UI元素",
      "type": "ui",
      "keywords": [],
      "lineNumber": 34,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')"
      ]
    },
    {
      "id": "TEST-2",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染手机号输入框",
      "type": "ui",
      "keywords": [
        "手机号",
        "输入框"
      ],
      "lineNumber": 43,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()",
        "expect(phoneInput).toHaveAttribute('type', 'tel')",
        "expect(phoneInput).toHaveAttribute('placeholder', '请输入手机号')",
        "expect(phoneInput).toHaveAttribute('maxLength', '11')"
      ]
    },
    {
      "id": "TEST-3",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染验证码输入框",
      "type": "ui",
      "keywords": [
        "验证码",
        "输入框"
      ],
      "lineNumber": 54,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()",
        "expect(verificationInput).toHaveAttribute('type', 'text')",
        "expect(verificationInput).toHaveAttribute('placeholder', '请输入验证码')",
        "expect(verificationInput).toHaveAttribute('maxLength', '6')"
      ]
    },
    {
      "id": "TEST-4",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染获取验证码按钮",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 65,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()",
        "expect(getCodeBtn).toHaveTextContent('获取验证码')",
        "expect(getCodeBtn).toHaveAttribute('type', 'button')"
      ]
    },
    {
      "id": "TEST-5",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染用户协议复选框",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 75,
      "assertions": [
        "expect(agreementCheckbox).toBeInTheDocument()",
        "expect(agreementCheckbox).toHaveAttribute('type', 'checkbox')"
      ]
    },
    {
      "id": "TEST-6",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染用户协议文本和链接",
      "type": "ui",
      "keywords": [
        "用户",
        "链接"
      ],
      "lineNumber": 84,
      "assertions": [
        "expect(agreementText).toBeInTheDocument()",
        "expect(agreementText).toHaveTextContent('我已阅读并同意')",
        "expect(agreementLink).toBeInTheDocument()",
        "expect(agreementLink).toHaveTextContent('《用户协议》')"
      ]
    },
    {
      "id": "TEST-7",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染注册按钮",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮"
      ],
      "lineNumber": 97,
      "assertions": [
        "expect(registerBtn).toBeInTheDocument()",
        "expect(registerBtn).toHaveTextContent('注册')",
        "expect(registerBtn).toHaveAttribute('type', 'submit')"
      ]
    },
    {
      "id": "TEST-8",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "UI元素存在性测试",
      "name": "应该渲染登录链接",
      "type": "ui",
      "keywords": [
        "登录",
        "链接"
      ],
      "lineNumber": 107,
      "assertions": [
        "expect(loginLinkContainer).toBeInTheDocument()",
        "expect(loginLinkContainer).toHaveTextContent('已有账号？立即登录')",
        "expect(loginLinkBtn).toBeInTheDocument()",
        "expect(loginLinkBtn).toHaveTextContent('立即登录')"
      ]
    },
    {
      "id": "TEST-9",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "应该接受有效的手机号格式",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 122,
      "assertions": [
        "expect(phoneInput).toHaveValue(phone)"
      ]
    },
    {
      "id": "TEST-10",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "应该拒绝无效的手机号格式",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 135,
      "assertions": [
        "expect(phoneInput).toHaveValue(phone)"
      ]
    },
    {
      "id": "TEST-11",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "手机号输入验证测试",
      "name": "应该限制手机号输入长度",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 150,
      "assertions": [
        "expect(phoneInput).toHaveAttribute('maxLength', '11')"
      ]
    },
    {
      "id": "TEST-12",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "验证码输入验证测试",
      "name": "应该只接受数字输入",
      "type": "ui",
      "keywords": [],
      "lineNumber": 161,
      "assertions": [
        "expect(verificationInput).toHaveValue('123')"
      ]
    },
    {
      "id": "TEST-13",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "验证码输入验证测试",
      "name": "应该限制验证码输入长度为6位",
      "type": "ui",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 173,
      "assertions": [
        "expect(verificationInput).toHaveAttribute('maxLength', '6')"
      ]
    },
    {
      "id": "TEST-14",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "获取验证码功能测试",
      "name": "应该在有效手机号时允许获取验证码",
      "type": "ui",
      "keywords": [
        "验证码",
        "手机号"
      ],
      "lineNumber": 184,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-15",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "获取验证码功能测试",
      "name": "应该在倒计时期间禁用获取验证码按钮",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 201,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-16",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "获取验证码功能测试",
      "name": "应该在无效手机号时禁用获取验证码按钮",
      "type": "ui",
      "keywords": [
        "验证码",
        "手机号",
        "按钮"
      ],
      "lineNumber": 215,
      "assertions": [
        "expect(getCodeBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-17",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "用户协议功能测试",
      "name": "应该能够勾选和取消勾选用户协议",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 229,
      "assertions": [
        "expect(agreementCheckbox).not.toBeChecked()",
        "expect(agreementCheckbox).toBeChecked()",
        "expect(agreementCheckbox).not.toBeChecked()"
      ]
    },
    {
      "id": "TEST-18",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "用户协议功能测试",
      "name": "应该能够点击协议链接",
      "type": "ui",
      "keywords": [
        "链接"
      ],
      "lineNumber": 247,
      "assertions": [
        "expect(agreementLink).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-19",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "注册按钮状态测试",
      "name": "应该在表单无效时禁用注册按钮",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮",
        "表单"
      ],
      "lineNumber": 262,
      "assertions": [
        "expect(registerBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-20",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "注册按钮状态测试",
      "name": "应该在所有条件满足时启用注册按钮",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮"
      ],
      "lineNumber": 272,
      "assertions": [
        "expect(registerBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-21",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "注册按钮状态测试",
      "name": "应该在未勾选协议时禁用注册按钮",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮"
      ],
      "lineNumber": 289,
      "assertions": [
        "expect(registerBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-22",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "注册按钮状态测试",
      "name": "应该在部分信息无效时禁用注册按钮",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮"
      ],
      "lineNumber": 304,
      "assertions": [
        "expect(registerBtn).toBeDisabled()",
        "expect(registerBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-23",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "表单提交测试",
      "name": "应该在有效输入时提交注册表单",
      "type": "ui",
      "keywords": [
        "注册",
        "表单"
      ],
      "lineNumber": 325,
      "assertions": [
        "expect(registerForm).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-24",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "表单提交测试",
      "name": "应该阻止无效表单提交",
      "type": "ui",
      "keywords": [
        "表单"
      ],
      "lineNumber": 346,
      "assertions": [
        "expect(registerBtn).toBeDisabled()"
      ]
    },
    {
      "id": "TEST-25",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该显示手机号格式错误提示",
      "type": "ui",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 361,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-26",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该显示验证码格式错误提示",
      "type": "ui",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 375,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-27",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "错误处理测试",
      "name": "应该显示手机号已注册错误提示",
      "type": "ui",
      "keywords": [
        "注册",
        "手机号"
      ],
      "lineNumber": 388,
      "assertions": [
        "expect(registerForm).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-28",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "加载状态测试",
      "name": "应该在注册过程中显示加载状态",
      "type": "ui",
      "keywords": [
        "注册"
      ],
      "lineNumber": 410,
      "assertions": [
        "expect(registerBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-29",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "导航功能测试",
      "name": "应该能够导航到登录页面",
      "type": "ui",
      "keywords": [
        "登录",
        "页面"
      ],
      "lineNumber": 432,
      "assertions": [
        "expect(loginLink).toHaveAttribute('href', '/login')"
      ]
    },
    {
      "id": "TEST-30",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "响应式设计测试",
      "name": "应该在不同屏幕尺寸下正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 447,
      "assertions": [
        "expect(registerPage).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-31",
      "file": "frontend/test/components/RegisterPage.test.tsx",
      "describe": "重复注册检查测试",
      "name": "应该检查手机号是否已注册",
      "type": "ui",
      "keywords": [
        "注册",
        "手机号"
      ],
      "lineNumber": 459,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-1",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.1: 登录界面布局需求验证",
      "name": "REQ-1.1.1: 登录界面布局从上到下包含所有必需元素",
      "type": "ui",
      "keywords": [
        "登录"
      ],
      "lineNumber": 33,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument();",
        "expect(countryCode).toBeInTheDocument();",
        "expect(codeInput).toBeInTheDocument();",
        "expect(getCodeButton).toBeInTheDocument();",
        "expect(loginButton).toBeInTheDocument();",
        "expect(loginButton).toHaveClass('w-full');",
        "expect(loginButton).toHaveClass('bg-orange-500');",
        "expect(forgotLink).toBeInTheDocument();",
        "expect(registerLink).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-2",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.2: 用户发起获取验证码请求需求验证",
      "name": "REQ-1.2.1: 手机号格式无效时不发送验证码",
      "type": "ui",
      "keywords": [
        "验证码",
        "手机号"
      ],
      "lineNumber": 72,
      "assertions": [
        "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-3",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.2: 用户发起获取验证码请求需求验证",
      "name": "REQ-1.2.2: 成功获取验证码的完整流程",
      "type": "ui",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 88,
      "assertions": [
        "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
        "expect(getCodeButton).toBeDisabled();",
        "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
      ]
    },
    {
      "id": "TEST-4",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.3: 用户提交登录信息需求验证",
      "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
      "type": "ui",
      "keywords": [
        "登录",
        "注册",
        "手机号"
      ],
      "lineNumber": 119,
      "assertions": [
        "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-5",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.3: 用户提交登录信息需求验证",
      "name": "REQ-1.3.2: 使用错误验证码登录的错误处理",
      "type": "ui",
      "keywords": [
        "登录",
        "验证码"
      ],
      "lineNumber": 136,
      "assertions": [
        "expect(screen.getByText('验证码错误')).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-6",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.3: 用户提交登录信息需求验证",
      "name": "REQ-1.3.3: 成功登录流程验证",
      "type": "ui",
      "keywords": [
        "登录"
      ],
      "lineNumber": 153,
      "assertions": [
        "expect(screen.getByText('登录成功')).toBeInTheDocument();",
        "expect(mockNavigate).toHaveBeenCalledWith('/');"
      ]
    },
    {
      "id": "TEST-7",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-1.4: 页面导航功能需求验证",
      "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
      "type": "ui",
      "keywords": [
        "登录",
        "注册",
        "页面"
      ],
      "lineNumber": 176,
      "assertions": [
        "expect(mockNavigate).toHaveBeenCalledWith('/register');"
      ]
    },
    {
      "id": "TEST-8",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.1: 注册界面布局需求验证",
      "name": "REQ-2.1.1: 注册界面布局从上到下包含所有必需元素",
      "type": "ui",
      "keywords": [
        "注册"
      ],
      "lineNumber": 190,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument();",
        "expect(countryCode).toBeInTheDocument();",
        "expect(codeInput).toBeInTheDocument();",
        "expect(getCodeButton).toBeInTheDocument();",
        "expect(registerButton).toBeInTheDocument();",
        "expect(registerButton).toHaveClass('w-full');",
        "expect(registerButton).toHaveClass('bg-orange-500');",
        "expect(loginLink).toBeInTheDocument();",
        "expect(loginLink).toHaveClass('text-orange-500');",
        "expect(agreementCheckbox).toBeInTheDocument();",
        "expect(agreementText).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-9",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.2: 注册页面获取验证码需求验证",
      "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
      "type": "ui",
      "keywords": [
        "注册",
        "验证码",
        "手机号",
        "页面"
      ],
      "lineNumber": 234,
      "assertions": [
        "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-10",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.2: 注册页面获取验证码需求验证",
      "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
      "type": "ui",
      "keywords": [
        "注册",
        "验证码",
        "页面"
      ],
      "lineNumber": 250,
      "assertions": [
        "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
        "expect(getCodeButton).toBeDisabled();",
        "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
      ]
    },
    {
      "id": "TEST-11",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.3: 用户提交注册信息需求验证",
      "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
      "type": "ui",
      "keywords": [
        "登录",
        "注册",
        "手机号"
      ],
      "lineNumber": 280,
      "assertions": [
        "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
        "expect(mockNavigate).toHaveBeenCalledWith('/');"
      ]
    },
    {
      "id": "TEST-12",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.3: 用户提交注册信息需求验证",
      "name": "REQ-2.3.2: 未同意用户协议时注册按钮不可点击",
      "type": "ui",
      "keywords": [
        "注册",
        "用户",
        "按钮"
      ],
      "lineNumber": 305,
      "assertions": [
        "expect(registerButton).toBeDisabled();"
      ]
    },
    {
      "id": "TEST-13",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.3: 用户提交注册信息需求验证",
      "name": "REQ-2.3.2: 同意用户协议时注册按钮变为可点击",
      "type": "ui",
      "keywords": [
        "注册",
        "用户",
        "按钮"
      ],
      "lineNumber": 314,
      "assertions": [
        "expect(registerButton).not.toBeDisabled();"
      ]
    },
    {
      "id": "TEST-14",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.3: 用户提交注册信息需求验证",
      "name": "REQ-2.3.3: 使用错误验证码注册的错误处理",
      "type": "ui",
      "keywords": [
        "注册",
        "验证码"
      ],
      "lineNumber": 327,
      "assertions": [
        "expect(screen.getByText('验证码错误')).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-15",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.3: 用户提交注册信息需求验证",
      "name": "REQ-2.3.3: 成功注册流程验证",
      "type": "ui",
      "keywords": [
        "注册"
      ],
      "lineNumber": 348,
      "assertions": [
        "expect(screen.getByText('注册成功')).toBeInTheDocument();",
        "expect(mockNavigate).toHaveBeenCalledWith('/');"
      ]
    },
    {
      "id": "TEST-16",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-2.4: 注册页面导航功能需求验证",
      "name": "REQ-2.4.1: 从注册页面返回登录页面",
      "type": "ui",
      "keywords": [
        "登录",
        "注册",
        "页面"
      ],
      "lineNumber": 375,
      "assertions": [
        "expect(mockNavigate).toHaveBeenCalledWith('/login');"
      ]
    },
    {
      "id": "TEST-17",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-3.1: 首页布局需求验证",
      "name": "REQ-3.1.1: 首页包含所有必需元素",
      "type": "ui",
      "keywords": [],
      "lineNumber": 389,
      "assertions": [
        "expect(logo).toBeInTheDocument();",
        "expect(logo).toHaveClass('text-orange-500');",
        "expect(loginLink).toBeInTheDocument();",
        "expect(registerLink).toBeInTheDocument();"
      ]
    },
    {
      "id": "TEST-18",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-3.1: 首页布局需求验证",
      "name": "REQ-3.1.1: 首页登录链接跳转功能",
      "type": "ui",
      "keywords": [
        "登录",
        "链接"
      ],
      "lineNumber": 406,
      "assertions": [
        "expect(mockNavigate).toHaveBeenCalledWith('/login');"
      ]
    },
    {
      "id": "TEST-19",
      "file": "frontend/test/requirement-validation-tests.test.tsx",
      "describe": "REQ-3.1: 首页布局需求验证",
      "name": "REQ-3.1.1: 首页注册链接跳转功能",
      "type": "ui",
      "keywords": [
        "注册",
        "链接"
      ],
      "lineNumber": 418,
      "assertions": [
        "expect(mockNavigate).toHaveBeenCalledWith('/register');"
      ]
    },
    {
      "id": "TEST-1",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "品牌logo存在且功能正常",
      "type": "ui",
      "keywords": [],
      "lineNumber": 36,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')",
        "// expect(brandLogo).toHaveClass('brand-logo')"
      ]
    },
    {
      "id": "TEST-2",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "手机号输入框存在且功能正常",
      "type": "ui",
      "keywords": [
        "手机号",
        "输入框"
      ],
      "lineNumber": 50,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()",
        "expect(phoneInput).toHaveAttribute('placeholder', '请输入手机号')",
        "expect(phoneInput).toHaveAttribute('type', 'tel')",
        "expect(phoneInput).toHaveAttribute('maxLength', '11')",
        "expect(phoneInput).toHaveValue('13812345678')",
        "expect(() => {"
      ]
    },
    {
      "id": "TEST-3",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "验证码输入框存在且功能正常",
      "type": "ui",
      "keywords": [
        "验证码",
        "输入框"
      ],
      "lineNumber": 77,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()",
        "expect(verificationInput).toHaveAttribute('placeholder', '请输入验证码')",
        "expect(verificationInput).toHaveAttribute('type', 'text')",
        "expect(verificationInput).toHaveAttribute('maxLength', '6')",
        "expect(verificationInput).toHaveValue('123')",
        "expect(() => {"
      ]
    },
    {
      "id": "TEST-4",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "获取验证码按钮存在且功能正常",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 103,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()",
        "expect(getCodeBtn).toHaveTextContent('获取验证码')",
        "expect(getCodeBtn).toHaveAttribute('type', 'button')",
        "expect(getCodeBtn).toBeDisabled()",
        "expect(getCodeBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-5",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "登录按钮存在且功能正常",
      "type": "ui",
      "keywords": [
        "登录",
        "按钮"
      ],
      "lineNumber": 129,
      "assertions": [
        "expect(loginBtn).toBeInTheDocument()",
        "expect(loginBtn).toHaveTextContent('登录')",
        "expect(loginBtn).toHaveAttribute('type', 'submit')",
        "expect(loginBtn).toBeDisabled()",
        "expect(loginBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-6",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "登录界面UI元素检查",
      "name": "注册链接存在且功能正常",
      "type": "ui",
      "keywords": [
        "注册",
        "链接"
      ],
      "lineNumber": 159,
      "assertions": [
        "expect(registerLink).toBeInTheDocument()",
        "expect(registerLink).toHaveTextContent('立即注册')",
        "expect(registerLink).toHaveAttribute('href', '/register')",
        "expect(registerLink).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-7",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "品牌logo存在且功能正常",
      "type": "ui",
      "keywords": [],
      "lineNumber": 180,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')"
      ]
    },
    {
      "id": "TEST-8",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "手机号输入框存在且功能正常",
      "type": "ui",
      "keywords": [
        "手机号",
        "输入框"
      ],
      "lineNumber": 188,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()",
        "expect(phoneInput).toHaveAttribute('placeholder', '请输入手机号')",
        "expect(phoneInput).toHaveAttribute('type', 'tel')",
        "expect(phoneInput).toHaveAttribute('maxLength', '11')",
        "expect(phoneInput).toHaveValue('13812345678')"
      ]
    },
    {
      "id": "TEST-9",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "验证码输入框存在且功能正常",
      "type": "ui",
      "keywords": [
        "验证码",
        "输入框"
      ],
      "lineNumber": 202,
      "assertions": [
        "expect(verificationInput).toBeInTheDocument()",
        "expect(verificationInput).toHaveAttribute('placeholder', '请输入验证码')",
        "expect(verificationInput).toHaveAttribute('maxLength', '6')",
        "expect(verificationInput).toHaveValue('123')"
      ]
    },
    {
      "id": "TEST-10",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "获取验证码按钮存在且功能正常",
      "type": "ui",
      "keywords": [
        "验证码",
        "按钮"
      ],
      "lineNumber": 215,
      "assertions": [
        "expect(getCodeBtn).toBeInTheDocument()",
        "expect(getCodeBtn).toHaveTextContent('获取验证码')",
        "expect(getCodeBtn).toHaveAttribute('type', 'button')",
        "expect(getCodeBtn).toBeDisabled()",
        "expect(getCodeBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-11",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "用户协议复选框存在且功能正常",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 231,
      "assertions": [
        "expect(agreementCheckbox).toBeInTheDocument()",
        "expect(agreementCheckbox).toHaveAttribute('type', 'checkbox')",
        "expect(agreementCheckbox).not.toBeChecked()",
        "expect(agreementCheckbox).toBeChecked()",
        "expect(agreementCheckbox).not.toBeChecked()"
      ]
    },
    {
      "id": "TEST-12",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "用户协议文本和链接存在且功能正常",
      "type": "ui",
      "keywords": [
        "用户",
        "链接"
      ],
      "lineNumber": 253,
      "assertions": [
        "expect(agreementText).toBeInTheDocument()",
        "expect(agreementText).toHaveTextContent('我已阅读并同意')",
        "expect(agreementLink).toBeInTheDocument()",
        "expect(agreementLink).toHaveTextContent('《用户协议》')"
      ]
    },
    {
      "id": "TEST-13",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "注册按钮存在且功能正常",
      "type": "ui",
      "keywords": [
        "注册",
        "按钮"
      ],
      "lineNumber": 271,
      "assertions": [
        "expect(registerBtn).toBeInTheDocument()",
        "expect(registerBtn).toHaveTextContent('注册')",
        "expect(registerBtn).toHaveAttribute('type', 'submit')",
        "expect(registerBtn).toBeDisabled()",
        "expect(registerBtn).not.toBeDisabled()"
      ]
    },
    {
      "id": "TEST-14",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "注册界面UI元素检查",
      "name": "登录链接存在且功能正常",
      "type": "ui",
      "keywords": [
        "登录",
        "链接"
      ],
      "lineNumber": 294,
      "assertions": [
        "expect(loginLink).toBeInTheDocument()",
        "expect(loginLink).toHaveTextContent('立即登录')",
        "expect(loginLink).toHaveAttribute('href', '/login')"
      ]
    },
    {
      "id": "TEST-15",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "首页界面UI元素检查",
      "name": "品牌logo存在且功能正常",
      "type": "ui",
      "keywords": [],
      "lineNumber": 305,
      "assertions": [
        "expect(brandLogo).toBeInTheDocument()",
        "expect(brandLogo).toHaveTextContent('淘贝')"
      ]
    },
    {
      "id": "TEST-16",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "首页界面UI元素检查",
      "name": "用户区域存在且功能正常",
      "type": "ui",
      "keywords": [
        "用户"
      ],
      "lineNumber": 313,
      "assertions": [
        "expect(userSection).toBeInTheDocument()",
        "expect(loginLink).toBeInTheDocument()",
        "expect(registerLink).toBeInTheDocument()",
        "expect(loginLink).toHaveTextContent('登录')",
        "expect(registerLink).toHaveTextContent('注册')",
        "expect(loginLink).toHaveAttribute('href', '/login')",
        "expect(registerLink).toHaveAttribute('href', '/register')"
      ]
    },
    {
      "id": "TEST-17",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "首页界面UI元素检查",
      "name": "欢迎消息存在且功能正常",
      "type": "ui",
      "keywords": [],
      "lineNumber": 333,
      "assertions": [
        "expect(homeContent).toBeInTheDocument()",
        "expect(homeContent).toHaveTextContent('欢迎来到淘贝')"
      ]
    },
    {
      "id": "TEST-18",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "首页界面UI元素检查",
      "name": "登录链接存在且功能正常",
      "type": "ui",
      "keywords": [
        "登录",
        "链接"
      ],
      "lineNumber": 341,
      "assertions": [
        "expect(loginLink).toBeInTheDocument()",
        "expect(loginLink).toHaveTextContent('登录')",
        "expect(loginLink).toHaveAttribute('href', '/login')",
        "expect(loginLink).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-19",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "首页界面UI元素检查",
      "name": "注册链接存在且功能正常",
      "type": "ui",
      "keywords": [
        "注册",
        "链接"
      ],
      "lineNumber": 354,
      "assertions": [
        "expect(registerLink).toBeInTheDocument()",
        "expect(registerLink).toHaveTextContent('注册')",
        "expect(registerLink).toHaveAttribute('href', '/register')",
        "expect(registerLink).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-20",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "响应式UI元素检查",
      "name": "所有界面在不同屏幕尺寸下元素正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 369,
      "assertions": [
        "expect(loginPage).toBeInTheDocument()",
        "expect(brandLogo).toBeInTheDocument()",
        "expect(phoneInput).toBeInTheDocument()",
        "expect(loginBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-21",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "响应式UI元素检查",
      "name": "移动端UI元素适配检查",
      "type": "ui",
      "keywords": [],
      "lineNumber": 388,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()",
        "expect(getCodeBtn).toBeInTheDocument()",
        "expect(loginBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-22",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "UI状态变化检查",
      "name": "输入框focus/blur状态正确显示",
      "type": "ui",
      "keywords": [
        "输入框"
      ],
      "lineNumber": 412,
      "assertions": [
        "expect(() => {"
      ]
    },
    {
      "id": "TEST-23",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "UI状态变化检查",
      "name": "按钮hover状态正确显示",
      "type": "ui",
      "keywords": [
        "按钮"
      ],
      "lineNumber": 425
    },
    {
      "id": "TEST-24",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "UI状态变化检查",
      "name": "错误状态UI正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 442,
      "assertions": [
        "expect(phoneInput).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-25",
      "file": "frontend/test/ui-element-tests.test.tsx",
      "describe": "UI状态变化检查",
      "name": "加载状态UI正确显示",
      "type": "ui",
      "keywords": [],
      "lineNumber": 455,
      "assertions": [
        "expect(loginBtn).toBeInTheDocument()"
      ]
    },
    {
      "id": "TEST-1",
      "file": "backend/test/database.test.js",
      "describe": "DB-FindUserByPhone 接口测试",
      "name": "应该能够根据手机号查找用户",
      "type": "data",
      "keywords": [
        "手机号",
        "用户"
      ],
      "lineNumber": 48,
      "assertions": [
        "expect(result).toBeNull();"
      ]
    },
    {
      "id": "TEST-2",
      "file": "backend/test/database.test.js",
      "describe": "DB-FindUserByPhone 接口测试",
      "name": "应该处理无效手机号格式",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 57,
      "assertions": [
        "expect(result).toBeNull();"
      ]
    },
    {
      "id": "TEST-3",
      "file": "backend/test/database.test.js",
      "describe": "DB-FindUserByPhone 接口测试",
      "name": "应该处理空手机号",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 65,
      "assertions": [
        "expect(result).toBeNull();"
      ]
    },
    {
      "id": "TEST-4",
      "file": "backend/test/database.test.js",
      "describe": "DB-FindUserByPhone 接口测试",
      "name": "应该处理null手机号",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 72,
      "assertions": [
        "expect(result).toBeNull();"
      ]
    },
    {
      "id": "TEST-5",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateUser 接口测试",
      "name": "应该能够创建新用户",
      "type": "data",
      "keywords": [
        "用户"
      ],
      "lineNumber": 79,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(validPhone);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-6",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateUser 接口测试",
      "name": "应该处理重复手机号",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 90,
      "assertions": [
        "expect(firstResult).toHaveProperty('id');",
        "expect(firstResult.phone).toBe(phone);",
        "expect(typeof firstResult.id).toBe('number');",
        "await expect(database.createUser(phone)).rejects.toThrow();"
      ]
    },
    {
      "id": "TEST-7",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateUser 接口测试",
      "name": "应该处理无效手机号",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 104,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(invalidPhone);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-8",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateVerificationCode 接口测试",
      "name": "应该能够创建验证码记录",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 115,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(phone);",
        "expect(result.code).toBe(code);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-9",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateVerificationCode 接口测试",
      "name": "应该处理6位数字验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 128,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(phone);",
        "expect(result.code).toBe(validCode);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-10",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateVerificationCode 接口测试",
      "name": "应该处理无效验证码格式",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 141,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(phone);",
        "expect(result.code).toBe(invalidCode);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-11",
      "file": "backend/test/database.test.js",
      "describe": "DB-CreateVerificationCode 接口测试",
      "name": "应该处理过期时间设置",
      "type": "data",
      "keywords": [],
      "lineNumber": 153,
      "assertions": [
        "expect(result).toHaveProperty('id');",
        "expect(result.phone).toBe(phone);",
        "expect(result.code).toBe(code);",
        "expect(typeof result.id).toBe('number');"
      ]
    },
    {
      "id": "TEST-12",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该能够验证有效的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 168,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-13",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该拒绝无效的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 178,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-14",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该拒绝过期的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 187,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-15",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该拒绝已使用的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 196,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-16",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该处理空验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 205,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-17",
      "file": "backend/test/database.test.js",
      "describe": "DB-VerifyCode 接口测试",
      "name": "应该处理空手机号",
      "type": "data",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 213,
      "assertions": [
        "expect(result).toBe(false);"
      ]
    },
    {
      "id": "TEST-18",
      "file": "backend/test/database.test.js",
      "describe": "DB-CleanExpiredCodes 接口测试",
      "name": "应该能够清理过期的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 223,
      "assertions": [
        "expect(result).toBeUndefined(); // 当前TODO实现返回undefined"
      ]
    },
    {
      "id": "TEST-19",
      "file": "backend/test/database.test.js",
      "describe": "DB-CleanExpiredCodes 接口测试",
      "name": "应该保留未过期的验证码",
      "type": "data",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 229,
      "assertions": [
        "expect(result).toBeUndefined();"
      ]
    },
    {
      "id": "TEST-20",
      "file": "backend/test/database.test.js",
      "describe": "DB-CleanExpiredCodes 接口测试",
      "name": "应该处理空数据库情况",
      "type": "data",
      "keywords": [
        "数据库"
      ],
      "lineNumber": 235,
      "assertions": [
        "expect(result).toBeUndefined();"
      ]
    },
    {
      "id": "TEST-1",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该成功发送验证码给有效手机号",
      "type": "api",
      "keywords": [
        "验证码",
        "手机号"
      ],
      "lineNumber": 33,
      "assertions": [
        ".expect(200);",
        "expect(response.body).toEqual({"
      ]
    },
    {
      "id": "TEST-2",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该拒绝无效的手机号格式",
      "type": "api",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 48,
      "assertions": [
        ".expect(400);",
        "expect(response.body.error).toBe('请输入正确的手机号码');"
      ]
    },
    {
      "id": "TEST-3",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该处理缺少手机号参数",
      "type": "api",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 69,
      "assertions": [
        ".expect(400);",
        "expect(response.body.error).toBe('请输入正确的手机号码');"
      ]
    },
    {
      "id": "TEST-4",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该生成6位数字验证码",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 78,
      "assertions": [
        ".expect(200);",
        "expect(response.body.message).toBe('验证码已发送');",
        "expect(response.body.expiresIn).toBe(60);"
      ]
    },
    {
      "id": "TEST-5",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该设置验证码60秒过期时间",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 92,
      "assertions": [
        ".expect(200);",
        "expect(response.body.message).toBe('验证码已发送');",
        "expect(response.body.expiresIn).toBe(60);"
      ]
    },
    {
      "id": "TEST-6",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/verification-code",
      "name": "应该限制同一手机号的验证码发送频率",
      "type": "api",
      "keywords": [
        "验证码",
        "手机号"
      ],
      "lineNumber": 106,
      "assertions": [
        ".expect(200);",
        "expect(response1.body.message).toBe('验证码已发送');",
        "expect(response1.body.expiresIn).toBe(60);",
        ".expect(200);",
        "expect(response2.body.message).toBe('验证码已发送');",
        "expect(response2.body.expiresIn).toBe(60);"
      ]
    },
    {
      "id": "TEST-7",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该成功登录有效用户",
      "type": "api",
      "keywords": [
        "登录",
        "用户"
      ],
      "lineNumber": 131,
      "assertions": [
        ".expect(200);",
        "expect(response.body.userId).toBeDefined();",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.message).toBe('登录成功');",
        "expect(typeof response.body.token).toBe('string');"
      ]
    },
    {
      "id": "TEST-8",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该验证手机号格式",
      "type": "api",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 147,
      "assertions": [
        ".expect(400);",
        "expect(response.body.error).toBe('请输入正确的手机号码');"
      ]
    },
    {
      "id": "TEST-9",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该验证验证码格式",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 160,
      "assertions": [
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-10",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该验证验证码的正确性",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 175,
      "assertions": [
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-11",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该检查验证码是否过期",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 188,
      "assertions": [
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-12",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该确保验证码只能使用一次",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 201,
      "assertions": [
        ".expect(200);",
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-13",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该为新用户返回未注册错误",
      "type": "api",
      "keywords": [
        "注册",
        "用户"
      ],
      "lineNumber": 222,
      "assertions": [
        ".expect(200);",
        "expect(response.body.userId).toBeDefined();",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.message).toBe('登录成功');"
      ]
    },
    {
      "id": "TEST-14",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/login",
      "name": "应该生成JWT令牌",
      "type": "api",
      "keywords": [],
      "lineNumber": 238,
      "assertions": [
        ".expect(200);",
        "expect(response.body.token).toBeDefined();",
        "expect(typeof response.body.token).toBe('string');",
        "expect(response.body.userId).toBeDefined();"
      ]
    },
    {
      "id": "TEST-15",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该成功注册新用户",
      "type": "api",
      "keywords": [
        "注册",
        "用户"
      ],
      "lineNumber": 256,
      "assertions": [
        ".expect(201);",
        "expect(response.body.userId).toBeDefined();",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.message).toBe('注册成功');",
        "expect(typeof response.body.token).toBe('string');"
      ]
    },
    {
      "id": "TEST-16",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该验证手机号格式",
      "type": "api",
      "keywords": [
        "手机号"
      ],
      "lineNumber": 273,
      "assertions": [
        ".expect(400);",
        "expect(response.body.error).toBe('请输入正确的手机号码');"
      ]
    },
    {
      "id": "TEST-17",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该验证验证码格式",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 287,
      "assertions": [
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-18",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该要求用户同意协议",
      "type": "api",
      "keywords": [
        "用户"
      ],
      "lineNumber": 301,
      "assertions": [
        ".expect(400);",
        "expect(response1.body.error).toBe('请同意用户协议');",
        ".expect(400);",
        "expect(response2.body.error).toBe('请同意用户协议');"
      ]
    },
    {
      "id": "TEST-19",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该验证验证码的正确性",
      "type": "api",
      "keywords": [
        "验证码"
      ],
      "lineNumber": 323,
      "assertions": [
        ".expect(401);",
        "expect(response.body.error).toBe('验证码错误');"
      ]
    },
    {
      "id": "TEST-20",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该检查手机号是否已注册",
      "type": "api",
      "keywords": [
        "注册",
        "手机号"
      ],
      "lineNumber": 337,
      "assertions": [
        ".expect(201);",
        ".expect(201);",
        "expect(response.body.message).toBe('注册成功');",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.userId).toBeDefined();"
      ]
    },
    {
      "id": "TEST-21",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该创建新用户记录",
      "type": "api",
      "keywords": [
        "用户"
      ],
      "lineNumber": 360,
      "assertions": [
        ".expect(201);",
        "expect(response.body.userId).toBeDefined();",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.message).toBe('注册成功');"
      ]
    },
    {
      "id": "TEST-22",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该生成JWT令牌",
      "type": "api",
      "keywords": [],
      "lineNumber": 377,
      "assertions": [
        ".expect(201);",
        "expect(response.body.token).toBeDefined();",
        "expect(typeof response.body.token).toBe('string');",
        "expect(response.body.userId).toBeDefined();"
      ]
    },
    {
      "id": "TEST-23",
      "file": "backend/test/routes/auth.test.js",
      "describe": "POST /api/auth/register",
      "name": "应该自动登录新注册用户",
      "type": "api",
      "keywords": [
        "登录",
        "注册",
        "用户"
      ],
      "lineNumber": 394,
      "assertions": [
        ".expect(201);",
        "expect(response.body.userId).toBeDefined();",
        "expect(response.body.token).toBeDefined();",
        "expect(response.body.message).toBe('注册成功');"
      ]
    },
    {
      "id": "TEST-1",
      "file": "requirement-coverage-checker.js",
      "describe": "",
      "name": "\\n",
      "type": "ui",
      "keywords": [],
      "lineNumber": 26
    },
    {
      "id": "TEST-2",
      "file": "requirement-coverage-checker.js",
      "describe": "",
      "name": " ",
      "type": "ui",
      "keywords": [],
      "lineNumber": 46
    },
    {
      "id": "TEST-3",
      "file": "requirement-coverage-checker.js",
      "describe": "",
      "name": "\\n",
      "type": "ui",
      "keywords": [],
      "lineNumber": 148
    }
  ],
  "coverageResults": [
    {
      "requirement": {
        "id": "REQ-1",
        "source": "requirement_new.md",
        "section": "",
        "description": ".  用户登录",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-2",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1 登录界面",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-3",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1.1 界面布局从上到下包含：",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-4",
        "source": "requirement_new.md",
        "section": "",
        "description": "手机号输入区域：左侧默认显示\"+86\"，右侧为手机号输入框（占位符文本：\"请输入手机号\"）",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-5",
        "source": "requirement_new.md",
        "section": "",
        "description": "验证码输入区域：左侧为验证码输入框（占位符文本：\"请输入验证码\"），右侧为\"获取验证码\"按钮",
        "details": [],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-6",
        "source": "requirement_new.md",
        "section": "",
        "description": "\"登录\"按钮：全宽度，橙色",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-7",
        "source": "requirement_new.md",
        "section": "",
        "description": "底部导航区域：包含\"忘记账号\"和\"免费注册\"链接，点击\"免费注册\"链接跳转到注册页面",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-8",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2 用户发起获取验证码请求",
        "details": [],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-9",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2.1 校验用户输入的手机号码格式是否正确",
        "details": [
          "Scenario: 请求验证码时手机号格式无效",
          "Given 用户在**登录页面**",
          "And 用户输入一个无效的手机号（如 \"123\"）",
          "When 用户点击”获取验证码”",
          "Then 系统不发送验证码",
          "And 页面提示“请输入正确的手机号码”"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-10",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2.2 生成验证码",
        "details": [
          "Scenario: 成功获取验证码",
          "Given 用户在**登录页面**",
          "And 用户输入一个格式正确的手机号",
          "When 用户点击“获取验证码”",
          "Then 系统为该手机号生成一个6位验证码并打印在控制台",
          "And “获取验证码”按钮进入60秒倒计时且不可点击",
          "And 数据库记录手机号和验证码，有效期为60秒"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "手机号输入验证测试",
            "name": "获取验证码按钮应该根据手机号有效性启用/禁用",
            "type": "ui",
            "keywords": [
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(getCodeBtn).toBeDisabled()",
              "expect(getCodeBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/components/RegisterPage.test.tsx",
            "describe": "获取验证码功能测试",
            "name": "应该在无效手机号时禁用获取验证码按钮",
            "type": "ui",
            "keywords": [
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 215,
            "assertions": [
              "expect(getCodeBtn).toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-11",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3 用户提交登录信息",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-12",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.1 校验手机号是否已注册",
        "details": [
          "Scenario: 使用未注册的手机号登录",
          "Given 用户在**登录页面**",
          "And 用户输入了一个未注册的手机号",
          "And 用户输入了正确的验证码",
          "When 用户点击“**登录**”",
          "Then 页面提示“该手机号未注册，请先完成注册”"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-13",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.2 校验验证码是否正确",
        "details": [
          "Scenario: 使用错误的验证码登录",
          "Given 用户在**登录页面**",
          "And 用户输入了已注册的手机号",
          "And 用户输入了错误的验证码",
          "When 用户点击“**登录**”",
          "Then 页面提示“验证码错误”"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-14",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.3 系统完成登录流程",
        "details": [
          "Scenario: 成功登录",
          "Given 用户在**登录页面**",
          "And 用户输入了已注册的手机号",
          "And 用户输入了正确的验证码",
          "When 用户点击“**登录**”",
          "Then 系统验证成功",
          "And 页面提示\"登录成功\"",
          "And 页面自动跳转到首页"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-15",
        "source": "requirement_new.md",
        "section": "",
        "description": ".4 页面导航功能",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-16",
        "source": "requirement_new.md",
        "section": "",
        "description": ".4.1 登录页面到注册页面的跳转",
        "details": [
          "Scenario: 从登录页面跳转到注册页面",
          "Given 用户在**登录页面**",
          "When 用户点击\"免费注册\"链接",
          "Then 页面跳转到注册页面",
          "And 注册页面的输入框保持空白状态"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.35000000000000003,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/components/HomePage.test.tsx",
            "describe": "已登录状态测试",
            "name": "应该不显示登录注册链接",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "链接"
            ],
            "lineNumber": 120,
            "assertions": [
              "expect(userSection).toBeInTheDocument()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 链接"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-17",
        "source": "requirement_new.md",
        "section": "",
        "description": ".  用户注册",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-18",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1 注册界面",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-19",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1.1 界面布局从上到下包含：",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-20",
        "source": "requirement_new.md",
        "section": "",
        "description": "手机号码输入区域：左侧默认显示\"中国大陆 +86\"，右侧为手机号输入框（占位符文本：\"请输入你的手机号码\"）",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-21",
        "source": "requirement_new.md",
        "section": "",
        "description": "验证码输入区域：左侧为验证码输入框（占位符文本：\"请输入校验码\"），右侧为\"获取验证码\"按钮",
        "details": [],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-22",
        "source": "requirement_new.md",
        "section": "",
        "description": "\"同意并注册\"按钮：全宽度，橙色",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-23",
        "source": "requirement_new.md",
        "section": "",
        "description": "-“已有账号？立即登录”链接：“立即登录”为橙色链接",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-24",
        "source": "requirement_new.md",
        "section": "",
        "description": "协议同意区域：包含勾选框和协议链接文本\"同意《淘贝用户协议》\"",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-25",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2 用户发起获取验证码请求",
        "details": [],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-26",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2.1 校验用户输入的手机号码格式是否正确",
        "details": [
          "Scenario: 请求验证码时手机号格式无效",
          "Given 用户在**注册页面**",
          "And 用户输入一个无效的手机号（如 \"123\"）",
          "When 用户点击“获取验证码”",
          "Then 系统不发送验证码",
          "And 页面提示“请输入正确的手机号码”"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-27",
        "source": "requirement_new.md",
        "section": "",
        "description": ".2.2 生成验证码",
        "details": [
          "Scenario: 成功获取验证码",
          "Given 用户在**注册页面**",
          "And 用户了输入一个格式正确的手机号",
          "When 用户点击“获取验证码”",
          "Then 系统为该手机号生成一个6位验证码并打印在控制台",
          "And “获取验证码”按钮进入60秒倒计时且不可点击",
          "And 数据库记录手机号和验证码，有效期为60秒"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "手机号输入验证测试",
            "name": "获取验证码按钮应该根据手机号有效性启用/禁用",
            "type": "ui",
            "keywords": [
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(getCodeBtn).toBeDisabled()",
              "expect(getCodeBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/components/RegisterPage.test.tsx",
            "describe": "获取验证码功能测试",
            "name": "应该在无效手机号时禁用获取验证码按钮",
            "type": "ui",
            "keywords": [
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 215,
            "assertions": [
              "expect(getCodeBtn).toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.2: 未同意用户协议时注册按钮不可点击",
            "type": "ui",
            "keywords": [
              "注册",
              "用户",
              "按钮"
            ],
            "lineNumber": 305,
            "assertions": [
              "expect(registerButton).toBeDisabled();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 用户",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.2: 同意用户协议时注册按钮变为可点击",
            "type": "ui",
            "keywords": [
              "注册",
              "用户",
              "按钮"
            ],
            "lineNumber": 314,
            "assertions": [
              "expect(registerButton).not.toBeDisabled();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 用户",
            "关键词匹配: 按钮"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-28",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3 用户提交注册信息",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-29",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.1 校验手机号是否已被注册",
        "details": [
          "Scenario: 使用已注册的手机号进行注册",
          "Given 用户在**注册页面**",
          "And 用户输入了已注册的手机号",
          "And 用户输入了正确的验证码",
          "When 用户点击“**同意并注册**”",
          "Then 系统不创建新用户，用户成功登录",
          "And 页面提示“该手机号已注册，将直接为您登录”",
          "And 页面跳转到首页"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-30",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.2 校验用户是否同意用户协议",
        "details": [
          "Scenario: 未同意用户协议时注册按钮的状态",
          "Given 用户在**注册页面**",
          "And 用户未勾选“同意《淘贝用户协议》”复选框",
          "Then “**同意并注册**”按钮为不可点击状态",
          "Scenario: 同意用户协议时注册按钮的状态",
          "Given 用户在**注册页面**",
          "When 用户勾选“同意《淘贝用户协议》”复选框",
          "Then “**同意并注册**”按钮变为可点击状态"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-12",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.2: 未同意用户协议时注册按钮不可点击",
            "type": "ui",
            "keywords": [
              "注册",
              "用户",
              "按钮"
            ],
            "lineNumber": 305,
            "assertions": [
              "expect(registerButton).toBeDisabled();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 用户",
            "关键词匹配: 按钮"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.2: 同意用户协议时注册按钮变为可点击",
            "type": "ui",
            "keywords": [
              "注册",
              "用户",
              "按钮"
            ],
            "lineNumber": 314,
            "assertions": [
              "expect(registerButton).not.toBeDisabled();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 用户",
            "关键词匹配: 按钮"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-31",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.3 校验验证码是否正确",
        "details": [
          "Scenario: 使用错误的验证码登录",
          "Given 用户在**注册页面**",
          "And 用户输入了手机号",
          "And 用户输入了错误的验证码",
          "When 用户点击“**同意并注册**”",
          "Then 页面提示“验证码错误”"
        ],
        "acceptanceCriteria": [],
        "type": "validation"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-32",
        "source": "requirement_new.md",
        "section": "",
        "description": ".3.3 系统完成注册流程",
        "details": [
          "Scenario: 成功注册",
          "Given 用户在**注册页面**",
          "And 用户输入了未注册的手机号",
          "And 用户输入了正确的验证码",
          "When 用户点击了“**同意并注册**”",
          "Then 系统在数据库中创建新用户，用户成功登录",
          "And 页面提示“注册成功”",
          "And 用户成功登录",
          "And 自动跳转到首页"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.3: 用户提交登录信息需求验证",
            "name": "REQ-1.3.1: 使用未注册手机号登录的错误处理",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 119,
            "assertions": [
              "expect(screen.getByText('该手机号未注册，请先完成注册')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.3: 用户提交注册信息需求验证",
            "name": "REQ-2.3.1: 使用已注册手机号进行注册时直接登录",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "手机号"
            ],
            "lineNumber": 280,
            "assertions": [
              "expect(screen.getByText('该手机号已注册，将直接为您登录')).toBeInTheDocument();",
              "expect(mockNavigate).toHaveBeenCalledWith('/');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-33",
        "source": "requirement_new.md",
        "section": "",
        "description": ".4 页面导航功能",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-34",
        "source": "requirement_new.md",
        "section": "",
        "description": ".4.1 注册页面返回登录页面",
        "details": [
          "Scenario: 从注册页面返回登录页面",
          "Given 用户在**注册页面**",
          "When 用户点击“立即登录”链接",
          "Then 页面跳转回登录页面",
          "And 登录页面的输入框保持空白状态"
        ],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-16",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.4: 注册页面导航功能需求验证",
            "name": "REQ-2.4.1: 从注册页面返回登录页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 375,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/login');"
            ]
          },
          "matchScore": 0.35000000000000003,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/components/HomePage.test.tsx",
            "describe": "已登录状态测试",
            "name": "应该不显示登录注册链接",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "链接"
            ],
            "lineNumber": 120,
            "assertions": [
              "expect(userSection).toBeInTheDocument()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 链接"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-1.4: 页面导航功能需求验证",
            "name": "REQ-1.4.1: 从登录页面跳转到注册页面",
            "type": "ui",
            "keywords": [
              "登录",
              "注册",
              "页面"
            ],
            "lineNumber": 176,
            "assertions": [
              "expect(mockNavigate).toHaveBeenCalledWith('/register');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少auth测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-35",
        "source": "requirement_new.md",
        "section": "",
        "description": ". 首页",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-36",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1 首页布局",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-37",
        "source": "requirement_new.md",
        "section": "",
        "description": ".1.1 首页需要包含以下元素：",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-38",
        "source": "requirement_new.md",
        "section": "",
        "description": "品牌logo：橙色”淘贝”文字",
        "details": [],
        "acceptanceCriteria": [],
        "type": "functional"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少unit测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-39",
        "source": "requirement_new.md",
        "section": "",
        "description": "登录链接：“亲，请登录”文字，点击后跳转登录页面",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "REQ-40",
        "source": "requirement_new.md",
        "section": "",
        "description": "注册链接：“免费注册”文字，点击后跳转注册页面",
        "details": [],
        "acceptanceCriteria": [],
        "type": "auth"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少auth测试",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-41",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "UI-LoginPage"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-42",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "用户登录页面，包含手机号输入、验证码获取和登录功能。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-43",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "properties 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-44",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-45",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"登录成功后的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-46",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-47",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"导航到注册页面的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-48",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "state 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-49",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-50",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-51",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-52",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-53",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "UI-RegisterPage"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-54",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "用户注册页面，包含手机号输入、验证码获取、协议同意和注册功能。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.1: 注册页面手机号格式无效时不发送验证码",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "手机号",
              "页面"
            ],
            "lineNumber": 234,
            "assertions": [
              "expect(screen.getByText('请输入正确的手机号码')).toBeInTheDocument();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号",
            "关键词匹配: 页面"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "frontend/test/requirement-validation-tests.test.tsx",
            "describe": "REQ-2.2: 注册页面获取验证码需求验证",
            "name": "REQ-2.2.2: 注册页面成功获取验证码的完整流程",
            "type": "ui",
            "keywords": [
              "注册",
              "验证码",
              "页面"
            ],
            "lineNumber": 250,
            "assertions": [
              "expect(consoleSpy).toHaveBeenCalledWith(expect.stringMatching(/验证码: \\d{6}/));",
              "expect(getCodeButton).toBeDisabled();",
              "expect(getCodeButton.textContent).toMatch(/\\d+s/);"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 注册",
            "关键词匹配: 验证码",
            "关键词匹配: 页面"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-55",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "properties 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-56",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-57",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"注册成功后的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-58",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-59",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"导航到登录页面的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-60",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "state 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-61",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-62",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-63",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-64",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-65",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "UI-HomePage"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-66",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "应用首页，包含品牌logo和导航链接。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-67",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "properties 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-68",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-69",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"导航到登录页面的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-70",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "function"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-71",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"导航到注册页面的回调函数。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-72",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "boolean"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-73",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"用户是否已登录的状态。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-74",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "state 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-75",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-76",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-77",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-78",
        "source": ".artifacts/ui_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-79",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "API-POST-GetVerificationCode"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-80",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "route 接口实现",
        "details": [
          "POST /api/auth/verification-code"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-14",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 238,
            "assertions": [
              ".expect(200);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-22",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 377,
            "assertions": [
              ".expect(201);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-81",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "为指定手机号生成并发送验证码。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-82",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "input 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-83",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "JSON"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-84",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-85",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "phoneNumber 接口实现",
        "details": [
          "string"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-86",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "output 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-87",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "success 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-88",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "statusCode 接口实现",
        "details": [
          "200"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-89",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ message"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-90",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "error 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-91",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-92",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-93",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-94",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-95",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-96",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-97",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "API-POST-Login"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-98",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "route 接口实现",
        "details": [
          "POST /api/auth/login"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-14",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 238,
            "assertions": [
              ".expect(200);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-22",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 377,
            "assertions": [
              ".expect(201);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-99",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "处理用户登录请求，使用手机号和验证码进行身份验证。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 登录",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "frontend/test/components/LoginPage.test.tsx",
            "describe": "登录按钮状态测试",
            "name": "应该在手机号和验证码都有效时启用登录按钮",
            "type": "ui",
            "keywords": [
              "登录",
              "验证码",
              "手机号",
              "按钮"
            ],
            "lineNumber": 202,
            "assertions": [
              "expect(loginBtn).not.toBeDisabled()"
            ]
          },
          "matchScore": 0.30000000000000004,
          "matchReasons": [
            "关键词匹配: 登录",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-100",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "input 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-101",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "JSON"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-102",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-103",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "phoneNumber 接口实现",
        "details": [
          "string"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-104",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "verificationCode 接口实现",
        "details": [
          "string"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-105",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "output 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-106",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "success 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-107",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "statusCode 接口实现",
        "details": [
          "200"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-108",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ userId"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-109",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "error 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-110",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-111",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-112",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-113",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-114",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-115",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-116",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-117",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "API-POST-Register"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-118",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "route 接口实现",
        "details": [
          "POST /api/auth/register"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-22",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 377,
            "assertions": [
              ".expect(201);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        },
        {
          "testCase": {
            "id": "TEST-14",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该生成JWT令牌",
            "type": "api",
            "keywords": [],
            "lineNumber": 238,
            "assertions": [
              ".expect(200);",
              "expect(response.body.token).toBeDefined();",
              "expect(typeof response.body.token).toBe('string');",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.35,
          "matchReasons": [
            "类型匹配: api"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-119",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "处理用户注册请求，包含验证码校验和用户创建。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 注册"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-120",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "input 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-121",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "type 接口实现",
        "details": [
          "JSON"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-122",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-123",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "phoneNumber 接口实现",
        "details": [
          "string"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-124",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "verificationCode 接口实现",
        "details": [
          "string"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-125",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "agreeToTerms 接口实现",
        "details": [
          "boolean"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-126",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "output 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-127",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "success 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-128",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "statusCode 接口实现",
        "details": [
          "201"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-129",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ userId"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-130",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "error 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-131",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-132",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-133",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ error"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-134",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "body 接口实现",
        "details": [
          "{ userId"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-135",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-136",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-137",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-138",
        "source": ".artifacts/api_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-139",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "DB-FindUserByPhone"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-140",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "根据手机号查找用户记录。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-141",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-142",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-143",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-144",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-145",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "DB-CreateUser"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-146",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "在数据库中创建一个新的用户记录。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-7",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该成功登录有效用户",
            "type": "api",
            "keywords": [
              "登录",
              "用户"
            ],
            "lineNumber": 131,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-13",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该为新用户返回未注册错误",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 222,
            "assertions": [
              ".expect(200);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('登录成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-15",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该成功注册新用户",
            "type": "api",
            "keywords": [
              "注册",
              "用户"
            ],
            "lineNumber": 256,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');",
              "expect(typeof response.body.token).toBe('string');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-18",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该要求用户同意协议",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 301,
            "assertions": [
              ".expect(400);",
              "expect(response1.body.error).toBe('请同意用户协议');",
              ".expect(400);",
              "expect(response2.body.error).toBe('请同意用户协议');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-21",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该创建新用户记录",
            "type": "api",
            "keywords": [
              "用户"
            ],
            "lineNumber": 360,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        },
        {
          "testCase": {
            "id": "TEST-23",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该自动登录新注册用户",
            "type": "api",
            "keywords": [
              "登录",
              "注册",
              "用户"
            ],
            "lineNumber": 394,
            "assertions": [
              ".expect(201);",
              "expect(response.body.userId).toBeDefined();",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.message).toBe('注册成功');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 用户"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-147",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-148",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-149",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-150",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-151",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "DB-CreateVerificationCode"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-152",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "在数据库中创建验证码记录。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-153",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-154",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-155",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-156",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-157",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "DB-VerifyCode"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-158",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "验证手机号对应的验证码是否正确且未过期。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.5,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-2",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该拒绝无效的手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 48,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-3",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该处理缺少手机号参数",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 69,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-8",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 147,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-16",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证手机号格式",
            "type": "api",
            "keywords": [
              "手机号"
            ],
            "lineNumber": 273,
            "assertions": [
              ".expect(400);",
              "expect(response.body.error).toBe('请输入正确的手机号码');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-20",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该检查手机号是否已注册",
            "type": "api",
            "keywords": [
              "注册",
              "手机号"
            ],
            "lineNumber": 337,
            "assertions": [
              ".expect(201);",
              ".expect(201);",
              "expect(response.body.message).toBe('注册成功');",
              "expect(response.body.token).toBeDefined();",
              "expect(response.body.userId).toBeDefined();"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 手机号"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-159",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-160",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-161",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-162",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-163",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "id 接口实现",
        "details": [
          "DB-CleanExpiredCodes"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-164",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "清理数据库中已过期的验证码记录。"
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [
        {
          "testCase": {
            "id": "TEST-1",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该成功发送验证码给有效手机号",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 33,
            "assertions": [
              ".expect(200);",
              "expect(response.body).toEqual({"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-4",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该生成6位数字验证码",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 78,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-5",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该设置验证码60秒过期时间",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 92,
            "assertions": [
              ".expect(200);",
              "expect(response.body.message).toBe('验证码已发送');",
              "expect(response.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-6",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/verification-code",
            "name": "应该限制同一手机号的验证码发送频率",
            "type": "api",
            "keywords": [
              "验证码",
              "手机号"
            ],
            "lineNumber": 106,
            "assertions": [
              ".expect(200);",
              "expect(response1.body.message).toBe('验证码已发送');",
              "expect(response1.body.expiresIn).toBe(60);",
              ".expect(200);",
              "expect(response2.body.message).toBe('验证码已发送');",
              "expect(response2.body.expiresIn).toBe(60);"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-9",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 160,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-10",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 175,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-11",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该检查验证码是否过期",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 188,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-12",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/login",
            "name": "应该确保验证码只能使用一次",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 201,
            "assertions": [
              ".expect(200);",
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-17",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码格式",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 287,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        },
        {
          "testCase": {
            "id": "TEST-19",
            "file": "backend/test/routes/auth.test.js",
            "describe": "POST /api/auth/register",
            "name": "应该验证验证码的正确性",
            "type": "api",
            "keywords": [
              "验证码"
            ],
            "lineNumber": 323,
            "assertions": [
              ".expect(401);",
              "expect(response.body.error).toBe('验证码错误');"
            ]
          },
          "matchScore": 0.4,
          "matchReasons": [
            "类型匹配: api",
            "关键词匹配: 验证码"
          ]
        }
      ],
      "coverageLevel": "MINIMAL",
      "gaps": [
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-165",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "dependencies 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-166",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "acceptanceCriteria 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [
          "acceptanceCriteria:"
        ],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "验收标准覆盖不足: 0/1",
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-167",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "changeLog 接口实现",
        "details": [
          ""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    },
    {
      "requirement": {
        "id": "API-168",
        "source": ".artifacts/data_interface.yml",
        "section": "API接口",
        "description": "description 接口实现",
        "details": [
          "\"初始创建。\""
        ],
        "acceptanceCriteria": [],
        "type": "api"
      },
      "matchingTests": [],
      "coverageLevel": "NONE",
      "gaps": [
        "缺少api测试",
        "缺少integration测试"
      ]
    }
  ]
}